/**
 * SmMed
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "File.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace HttpServer {

File::File(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

File::File() {
    this->initializeModel();
}

File::~File() {}

void File::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_doctor_id_isSet = false;
    m_doctor_id_isValid = false;

    m_patient_id_isSet = false;
    m_patient_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void File::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void File::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::HttpServer::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::HttpServer::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_doctor_id_isValid = ::HttpServer::fromJsonValue(doctor_id, json[QString("doctor_id")]);
    m_doctor_id_isSet = !json[QString("doctor_id")].isNull() && m_doctor_id_isValid;

    m_patient_id_isValid = ::HttpServer::fromJsonValue(patient_id, json[QString("patient_id")]);
    m_patient_id_isSet = !json[QString("patient_id")].isNull() && m_patient_id_isValid;

    m_type_isValid = ::HttpServer::fromJsonValue(type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString File::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject File::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::HttpServer::toJsonValue(id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::HttpServer::toJsonValue(name));
    }
    if (m_doctor_id_isSet) {
        obj.insert(QString("doctor_id"), ::HttpServer::toJsonValue(doctor_id));
    }
    if (m_patient_id_isSet) {
        obj.insert(QString("patient_id"), ::HttpServer::toJsonValue(patient_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::HttpServer::toJsonValue(type));
    }
    return obj;
}

qint32 File::getId() const {
    return id;
}
void File::setId(const qint32 &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool File::is_id_Set() const{
    return m_id_isSet;
}

bool File::is_id_Valid() const{
    return m_id_isValid;
}

QString File::getName() const {
    return name;
}
void File::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool File::is_name_Set() const{
    return m_name_isSet;
}

bool File::is_name_Valid() const{
    return m_name_isValid;
}

QString File::getDoctorId() const {
    return doctor_id;
}
void File::setDoctorId(const QString &doctor_id) {
    this->doctor_id = doctor_id;
    this->m_doctor_id_isSet = true;
}

bool File::is_doctor_id_Set() const{
    return m_doctor_id_isSet;
}

bool File::is_doctor_id_Valid() const{
    return m_doctor_id_isValid;
}

qint32 File::getPatientId() const {
    return patient_id;
}
void File::setPatientId(const qint32 &patient_id) {
    this->patient_id = patient_id;
    this->m_patient_id_isSet = true;
}

bool File::is_patient_id_Set() const{
    return m_patient_id_isSet;
}

bool File::is_patient_id_Valid() const{
    return m_patient_id_isValid;
}

qint32 File::getType() const {
    return type;
}
void File::setType(const qint32 &type) {
    this->type = type;
    this->m_type_isSet = true;
}

bool File::is_type_Set() const{
    return m_type_isSet;
}

bool File::is_type_Valid() const{
    return m_type_isValid;
}

bool File::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_doctor_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_patient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool File::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_name_isValid && m_doctor_id_isValid && m_patient_id_isValid && m_type_isValid && true;
}

} // namespace HttpServer
