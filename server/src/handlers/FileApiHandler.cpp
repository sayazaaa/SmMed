/**
 * SmMed
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "FileApiHandler.h"
#include "FileApiRequest.h"
#include"global.h"
namespace HttpServer {

FileApiHandler::FileApiHandler(){

}

FileApiHandler::~FileApiHandler(){

}

void FileApiHandler::fileGet(QString uuid, QString apikey) {
    qDebug() << "FileGet:hello";
    QSharedPointer<QByteArray> resbyte;
    auto reqObj = qobject_cast<FileApiRequest*>(sender());
    try {
        if(!apiVerifyMap.contains(apikey))throw std::exception();
        resbyte = dbserver->get_file(uuid);
    } catch (std::exception e) {
        QString errorstr = QString::fromUtf8("get file failed!");
        if(reqObj != nullptr)
        reqObj->fileGetError(Object(),QNetworkReply::NetworkError::TimeoutError,errorstr);
        return;
    }

    if(reqObj != nullptr)
    {
        Object res(*resbyte);
        reqObj->fileGetResponse(res);
    }
}
void FileApiHandler::filePost(QString name, QString doctor_id, QString patient_id, QString type, QString apikey, QString appointment_id, HttpFileElement body) {
    qDebug() << "filePost";
    QSharedPointer<QJsonDocument> resjsondoc;
    Inline_response_200_3 res;
    auto reqObj = qobject_cast<FileApiRequest*>(sender());
    try {
        if(!apiVerifyMap.contains(apikey))throw std::exception();
        qDebug() << "filepost:verify succeed!";
        resjsondoc = dbserver->store_file(doctor_id,patient_id,name,type,body.asByteArray(),appointment_id.toInt());
    } catch (std::exception e) {
        if(reqObj != nullptr){
            QString errstr = QString::fromUtf8("upload failed!");
            reqObj->filePostError(res,QNetworkReply::NetworkError::ProtocolFailure,errstr);
        }
        return;
    }


    if( reqObj != nullptr )
    {
        QString resstr = QString::fromUtf8(resjsondoc->toJson());
        res = Inline_response_200_3(resstr);
        reqObj->filePostResponse(res);
    }
}


}
