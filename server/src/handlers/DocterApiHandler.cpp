/**
 * SmMed
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "DocterApiHandler.h"
#include "DocterApiRequest.h"
#include "global.h"
namespace HttpServer {

DocterApiHandler::DocterApiHandler(){

}

DocterApiHandler::~DocterApiHandler(){

}

void DocterApiHandler::doctorPost(QString apikey, Inline_object_1 inline_object_1) {
    Q_UNUSED(apikey);
    QString id = inline_object_1.getId();
    QString password = inline_object_1.getPassword();
    auto reqObj = qobject_cast<DocterApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        QSharedPointer<QJsonDocument> jsondoc;
        try {
            jsondoc = dbserver->set_doctorpassword(id,password);
        } catch (std::exception e) {
            QString errortext = "register failed!";
            Inline_response_200_2 res;
            qDebug() << errortext;
            QByteArray bytearray;
            reqObj->doctorPostError(res,QNetworkReply::NetworkError::UnknownNetworkError,errortext);
            qDebug() << errortext;
            return;
        }
        QString resstr = QString(jsondoc->toJson());
        qDebug() << resstr;
        Inline_response_200_2 res(resstr);
        reqObj->doctorPostResponse(res);
    }
}


}
